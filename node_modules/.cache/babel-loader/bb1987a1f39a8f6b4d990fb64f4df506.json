{"ast":null,"code":"// import axios from 'axios';\n// import { useCookies } from 'vue3-cookies';\n// import { api_url } from '../../utils/const';\n// export default {\n//   name: 'Login',\n//   props: {\n//     ws: WebSocket,\n//   },\n//   setup() {\n//     const { cookies } = useCookies();\n//     return { cookies };\n//   },\n//   data() {\n//     return {\n//       username: '',\n//       password: '',\n//       error: false,\n//       errorMsg: '',\n//     };\n//   },\n//   mounted() {\n//     if (this.$store.state.curUser != null) {\n//       this.$router.push('home');\n//     }\n//   },\n//   methods: {\n//     async handleSubmit() {\n//       try {\n//         // e.preventDefault();\n//         const response = await axios.post(`${api_url}/users/login`, {\n//           username: this.username,\n//           passwd: this.password,\n//         });\n//         this.cookies.set('token', response.data.data);\n//         this.$store.getters.socket.sendObj({\n//           type: 'login',\n//           args: [response.data.data],\n//         });\n//         this.$router.push('home');\n//       } catch (err) {\n//         console.log(err);\n//         const msgs = err.response.data.message.split(':');\n//         this.error = true;\n//         this.errorMsg = msgs[msgs.length - 1];\n//       }\n//     },\n//   },\n// };","map":{"version":3,"mappings":"AAwCA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","names":[],"sourceRoot":"","sources":["/Users/macbookpro/Documents/projects/windzo/src/views/Login.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"form-login form-wrap\">\n      <form @submit.prevent=\"handleSubmit\">\n        <h3>Login</h3>\n        <div v-show=\"error\" class=\"alert alert-danger\" role=\"alert\">\n          {{ errorMsg }}\n        </div>\n        <div class=\"form-group\">\n          <label for=\"username\">Username</label>\n          <input\n            type=\"text\"\n            id=\"username\"\n            name=\"username\"\n            class=\"form-control\"\n            v-model=\"username\"\n            placeholder=\"Username\"\n            required\n          />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"\">Password</label>\n          <input\n            type=\"password\"\n            class=\"form-control\"\n            v-model=\"password\"\n            placeholder=\"Password\"\n            required\n          />\n        </div>\n        <div class=\"form-group\">\n          <button class=\"btn btn-primary btn-block\">Login</button>\n          Don't have an account yet?\n          <router-link to=\"/register\">Create a new account</router-link>\n        </div>\n      </form>\n    </div>\n  </div>\n</template>\n// <script>\n// import axios from 'axios';\n// import { useCookies } from 'vue3-cookies';\n// import { api_url } from '../../utils/const';\n\n// export default {\n//   name: 'Login',\n//   props: {\n//     ws: WebSocket,\n//   },\n//   setup() {\n//     const { cookies } = useCookies();\n//     return { cookies };\n//   },\n//   data() {\n//     return {\n//       username: '',\n//       password: '',\n//       error: false,\n//       errorMsg: '',\n//     };\n//   },\n//   mounted() {\n//     if (this.$store.state.curUser != null) {\n//       this.$router.push('home');\n//     }\n//   },\n//   methods: {\n//     async handleSubmit() {\n//       try {\n//         // e.preventDefault();\n//         const response = await axios.post(`${api_url}/users/login`, {\n//           username: this.username,\n//           passwd: this.password,\n//         });\n//         this.cookies.set('token', response.data.data);\n//         this.$store.getters.socket.sendObj({\n//           type: 'login',\n//           args: [response.data.data],\n//         });\n\n//         this.$router.push('home');\n//       } catch (err) {\n//         console.log(err);\n//         const msgs = err.response.data.message.split(':');\n//         this.error = true;\n//         this.errorMsg = msgs[msgs.length - 1];\n//       }\n//     },\n//   },\n// };\n</script>\n\n<style scoped>\n.btn {\n  margin-right: 10px;\n}\n</style>\n"]},"metadata":{},"sourceType":"script"}