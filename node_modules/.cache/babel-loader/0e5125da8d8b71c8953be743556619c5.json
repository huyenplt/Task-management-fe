{"ast":null,"code":"import { renderSlot as _renderSlot, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, normalizeClass as _normalizeClass, vShow as _vShow, withDirectives as _withDirectives, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = [\"aria-expanded\", \"aria-controls\"];\nconst _hoisted_2 = {\n  class: \"mr-3 text-xl\"\n};\nconst _hoisted_3 = {\n  class: \"w-full\"\n};\nconst _hoisted_4 = {\n  class: \"float-right\"\n};\nconst _hoisted_5 = [\"id\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Icon = _resolveComponent(\"Icon\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => $options.toggleAccordion()),\n    class: _normalizeClass([\"text-gray-800 dark:text-gray-500 bg-transparent hover:bg-gray-200 dark:hover:bg-gray-700 w-full flex text-left rounded-md box-border p-3\", {\n      'bg-gray-200  dark:bg-gray-700': $data.isOpen,\n      'bg-transparent': !$data.isOpen\n    }]),\n    \"aria-expanded\": $data.isOpen,\n    \"aria-controls\": `collapse${_ctx._uid}`\n  }, [_createElementVNode(\"span\", _hoisted_2, [_renderSlot(_ctx.$slots, \"icon\")]), _createElementVNode(\"span\", _hoisted_3, [_renderSlot(_ctx.$slots, \"title\")]), _createElementVNode(\"span\", {\n    class: _normalizeClass([\"box-border mt-1 text-gray-500 dark:text-gray-500\", {\n      'rotate-180': $data.isOpen,\n      'rotate-0': !$data.isOpen\n    }])\n  }, [_createElementVNode(\"span\", _hoisted_4, [_createVNode(_component_Icon, {\n    icon: \"fa6-solid:angle-down\"\n  })])], 2\n  /* CLASS */\n  )], 10\n  /* CLASS, PROPS */\n  , _hoisted_1), _withDirectives(_createElementVNode(\"div\", {\n    id: `collapse${_ctx._uid}`\n  }, [_renderSlot(_ctx.$slots, \"content\")], 8\n  /* PROPS */\n  , _hoisted_5), [[_vShow, $data.isOpen]])], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;;AAWUA,OAAK,EAAC;;;AAGNA,OAAK,EAAC;;;AAUJA,OAAK,EAAC;;;;;;6DAvBhBC,oBA2BS,QA3BT,EA2BS;AA1BNC,WAAK,sCAAEC,0BAAF,CA0BC;AAzBPH,SAAK,mBAAC,0IAAD,EAA2I;uCAG/FI,YAH+F;yBAG9DA;AAH8D,KAA3I,EAyBE;AAxBN,qBAAeA,YAwBT;AAvBN,qBAAa,WAAaC,SAAI;AAuBxB,GA3BT,GAUEJ,oBAEO,MAFP,cAEO,CADLK,YAAyBD,WAAzB,EAAyB,MAAzB,CACK,CAFP,GAGAJ,oBAEO,MAFP,cAEO,CADLK,YAAqBD,WAArB,EAAqB,OAArB,CACK,CAFP,GAGAJ,oBAUO,MAVP,EAUO;AATLD,SAAK,mBAAC,kDAAD,EAAmD;oBACxBI,YADwB;mBACKA;AADL,KAAnD;AASA,GAVP,GAOEH,oBAEO,MAFP,cAEO,CADLM,aAAoCC,eAApC,EAAoC;AAA9BC,QAAI,EAAC;AAAyB,GAApC,CACK,CAFP,EAPF;;AAAA,IAhBF;;AAAA,iCA6BAR,oBAEM,KAFN,EAEM;AAFgBS,MAAE,aAAaL,SAAI;AAEnC,GAFN,GACEC,YAAuBD,WAAvB,EAAuB,SAAvB,EADF;;AAAA,2BAAaD","names":["class","_createElementVNode","onClick","$options","$data","_ctx","_renderSlot","_createVNode","_component_Icon","icon","id"],"sourceRoot":"","sources":["/Users/macbookpro/Documents/projects/windzo/src/components/MenuAccordion.vue"],"sourcesContent":["<template>\n  <button\n    @click=\"toggleAccordion()\"\n    class=\"text-gray-800 dark:text-gray-500 bg-transparent hover:bg-gray-200 dark:hover:bg-gray-700 w-full flex text-left rounded-md box-border p-3\"\n    :aria-expanded=\"isOpen\"\n    :aria-controls=\"`collapse${_uid}`\"\n    :class=\"{\n      'bg-gray-200  dark:bg-gray-700': isOpen,\n      'bg-transparent': !isOpen,\n    }\"\n  >\n    <span class=\"mr-3 text-xl\">\n      <slot name=\"icon\"></slot>\n    </span>\n    <span class=\"w-full\">\n      <slot name=\"title\" />\n    </span>\n    <span\n      class=\"box-border mt-1 text-gray-500 dark:text-gray-500\"\n      :class=\"{\n        'rotate-180': isOpen,\n        'rotate-0': !isOpen,\n      }\"\n    >\n      <span class=\"float-right\">\n        <Icon icon=\"fa6-solid:angle-down\" />\n      </span>\n    </span>\n  </button>\n\n  <div v-show=\"isOpen\" :id=\"`collapse${_uid}`\">\n    <slot name=\"content\" />\n  </div>\n</template>\n\n<script>\n  import { Icon } from \"@iconify/vue\";\n  export default {\n    data() {\n      return {\n        isOpen: false,\n      };\n    },\n\n    methods: {\n      toggleAccordion() {\n        this.isOpen = !this.isOpen;\n      },\n    },\n    components: {\n      Icon,\n    },\n  };\n</script>\n"]},"metadata":{},"sourceType":"module"}